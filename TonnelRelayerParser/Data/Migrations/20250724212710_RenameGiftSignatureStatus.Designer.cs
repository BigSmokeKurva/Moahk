// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moahk.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Moahk.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250724212710_RenameGiftSignatureStatus")]
    partial class RenameGiftSignatureStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Moahk.Data.Entities.CrystalpayInvoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int>("Days")
                        .HasColumnType("integer");

                    b.Property<bool>("IsError")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CrystalpayInvoices");
                });

            modelBuilder.Entity("Moahk.Data.Entities.PromoCode", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DateExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MaxUses")
                        .HasColumnType("integer");

                    b.Property<double>("Percent")
                        .HasColumnType("double precision");

                    b.PrimitiveCollection<List<long>>("UsedUsersIds")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.HasKey("Code");

                    b.ToTable("PromoCodes");
                });

            modelBuilder.Entity("Moahk.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<long[]>("Activities")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<long>("Criteria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.PrimitiveCollection<long[]>("GiftSignatureStatus")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("License")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("MessageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.Property<double>("ModelPercentMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(100.0);

                    b.Property<double>("ModelPercentMin")
                        .HasColumnType("double precision");

                    b.Property<double>("PriceMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(10000.0);

                    b.Property<double>("PriceMin")
                        .HasColumnType("double precision");

                    b.Property<int>("ProfitPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(10);

                    b.Property<string>("PromoCodeCode")
                        .HasColumnType("text");

                    b.Property<double>("ReferralBalance")
                        .HasColumnType("double precision");

                    b.Property<double>("ReferralPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(25.0);

                    b.Property<long?>("ReferrerId")
                        .HasColumnType("bigint");

                    b.PrimitiveCollection<long[]>("SignalTypes")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<long>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(1L);

                    b.HasKey("Id");

                    b.HasIndex("PromoCodeCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Moahk.Data.Entities.CrystalpayInvoice", b =>
                {
                    b.HasOne("Moahk.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moahk.Data.Entities.User", b =>
                {
                    b.HasOne("Moahk.Data.Entities.PromoCode", "PromoCode")
                        .WithMany()
                        .HasForeignKey("PromoCodeCode");

                    b.Navigation("PromoCode");
                });
#pragma warning restore 612, 618
        }
    }
}
